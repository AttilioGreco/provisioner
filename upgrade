#!/bin/bash


if [ "$DEBUG" = "true" ]; then
  set -x
fi
set -e

echo "$(date +%x\ %H:%M:%S) Start rolling upgrade"

# Import basic functions
source lib/helpers.sh
source lib/init.sh

# Clean up old interrupted process
curl -f -sS -X DELETE "http://${CONSUL}:${CONSUL_PORT}/v1/kv/${CLUSTER_NAME}/${IDENTITY}/cleanup?recurse=yes"
untaint_nodes

# Test that the upgrade works on a new node
echo "$(date +%x\ %H:%M:%S) Test that the upgrade works on a new node"
QUANTITY=$(echo "$(get_current_quantity) + 1" | bc)
export QUANTITY
source deploy

# Wait until all the cluster status is fine
echo "$(date +%x\ %H:%M:%S) Wait until all the cluster status is fine"
for n in $(seq 1 $QUANTITY); do
  NUMBER=$(echo "$n - 1" | bc)
  wait_health_ok $IDENTITY-$NUMBER
done
echo "$(date +%x\ %H:%M:%S) Cluster status is ok"

QUANTITY_TAINT=$(echo "$QUANTITY - 1" | bc)

for n in $(seq 1 $QUANTITY_TAINT); do
  NUMBER=$(echo "$n - 1" | bc)
  taint_node $NUMBER

  # Create cleanup task to the queue
  curl -sS -X PUT http://${CONSUL}:${CONSUL_PORT}/v1/kv/${CLUSTER_NAME}/${IDENTITY}/cleanup/${IDENTITY}-${NUMBER} > /dev/null

  # Recreate tainted instance $NUMBER
  QUANTITY_CURRENT=$QUANTITY
  export QUANTITY_CURRENT
  source lib/apply.sh
  source lib/init.sh

  # Ensure that cleanup task queue is empty
  until curl -f -sS -X DELETE http://${CONSUL}:${CONSUL_PORT}/v1/kv/${CLUSTER_NAME}/${IDENTITY}/cleanup/${IDENTITY}-${NUMBER} > /dev/null; do
    sleep 1
  done

  # TODO found a smart way to get the state change
  sleep 10

  # Wait until node is ready
  wait_health_ok $IDENTITY-$NUMBER
done

# Decrease number to the orginal number
echo "$(date +%x\ %H:%M:%S) Decrease quantity to the orginal number"
export QUANTITY=$QUANTITY_TAINT
source deploy

echo "$(date +%x\ %H:%M:%S) Rolling upgrade ended"
